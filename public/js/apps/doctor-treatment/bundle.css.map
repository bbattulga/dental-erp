{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../../../resources/js/doctor-treatment/HsvPicker.svelte",
    "../../../../resources/js/doctor-treatment/App.svelte",
    "../../../../resources/js/doctor-treatment/DecayChart.svelte",
    "../../../../resources/js/doctor-treatment/Filling.svelte",
    "../../../../resources/js/doctor-treatment/Finish.svelte",
    "../../../../resources/js/doctor-treatment/Paint.svelte",
    "../../../../resources/js/doctor-treatment/PaintTools.svelte",
    "../../../../resources/js/doctor-treatment/Tooth.svelte",
    "../../../../resources/js/doctor-treatment/TreatmentHistoryList.svelte",
    "../../../../resources/js/doctor-treatment/Treatments.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport {onMount,createEventDispatcher} from 'svelte';\n\nexport let startColor =\"#FF0000\";\n\nonMount(() => {\n document.addEventListener(\"mouseup\", mouseUp);\n document.addEventListener(\"touchend\", mouseUp);\n document.addEventListener(\"mousemove\", mouseMove);\n document.addEventListener(\"touchmove\", touchMove);\n document.addEventListener(\"touchstart\", killMouseEvents);\n document.addEventListener(\"mousedown\", killTouchEvents);\n setStartColor()\n});\n\nNumber.prototype.mod = function(n) {\n    return ((this%n)+n)%n;\n};\nconst dispatch = createEventDispatcher();\nlet tracked;\nlet h = 1;\nlet s = 1;\nlet v = 1;\nlet a = 1;\nlet r = 255;\nlet g = 0;\nlet b = 0;\nlet hexValue = '#FF0000';\n\n\nfunction setStartColor() {\n  let hex = startColor.replace('#','');\n  if (hex.length !== 6 && hex.length !== 3 && !hex.match(/([^A-F0-9])/gi)) {\n    alert('Invalid property value (startColor)');\n    return;\n  }\n  let hexFiltered='';\n  if (hex.length === 3)\n    hex.split('').forEach( c => {hexFiltered += c+c;});\n  else\n    hexFiltered=hex;\n  hexValue = hexFiltered;\n  r = parseInt(hexFiltered.substring(0,2), 16);\n  g = parseInt(hexFiltered.substring(2,4), 16);\n  b = parseInt(hexFiltered.substring(4,6), 16);\n  rgbToHSV(r,g,b,true);\n  updateCsPicker();\n  updateHuePicker();\n}\n\nfunction removeEventListenerFromElement(elementId, eventName, listenerCallback) {\n  let element = document.querySelector(elementId);\n  if (element) element.removeEventListener(eventName, listenerCallback);\n}\n\nfunction killMouseEvents() {\n  removeEventListenerFromElement(\"#alpha-event\", \"mousedown\", alphaDown);\n  removeEventListenerFromElement(\"#colorsquare-event\", \"mousedown\", csDown);\n  removeEventListenerFromElement(\"#hue-event\", \"mousedown\", hueDown);\n  document.removeEventListener(\"mouseup\",mouseUp);\n  document.removeEventListener(\"mousemove\",mouseMove);\n  document.removeEventListener(\"touchstart\",killMouseEvents);\n  document.removeEventListener(\"mousedown\",killTouchEvents);\n}\n\nfunction killTouchEvents() {\n  removeEventListenerFromElement(\"#alpha-event\", \"touchstart\", alphaDownTouch);\n  removeEventListenerFromElement(\"#colorsquare-event\", \"touchstart\", csDownTouch);\n  removeEventListenerFromElement(\"#hue-event\", \"touchstart\", hueDownTouch);\n  document.removeEventListener(\"touchend\",mouseUp);\n  document.removeEventListener(\"touchmove\",touchMove);\n  document.removeEventListener(\"touchstart\",killMouseEvents);\n  document.removeEventListener(\"mousedown\",killTouchEvents);\n}\n\nfunction updateCsPicker() {\n  let csPicker = document.querySelector(\"#colorsquare-picker\");\n  let xPercentage = s * 100;\n  let yPercentage = (1 - v) * 100;\n  csPicker.style.top = yPercentage + \"%\";\n  csPicker.style.left = xPercentage + \"%\";\n}\n\nfunction updateHuePicker() {\n  let huePicker = document.querySelector(\"#hue-picker\");\n  let xPercentage = h * 100;\n  huePicker.style.left = xPercentage + \"%\";\n}\n\nfunction colorChangeCallback() {\n  dispatch('colorChange', {\n  \t\t\tr: r,\n        g: g,\n        b: b,\n        a: a\n  \t\t});\n}\n\nfunction mouseMove(event) {\n if (tracked) {\n  let mouseX = event.clientX;\n  let mouseY = event.clientY;\n  let trackedPos = tracked.getBoundingClientRect();\n  let xPercentage, yPercentage, picker;\n  switch (tracked.id) {\n   case \"colorsquare-event\":\n    xPercentage = (mouseX - trackedPos.x) / 240 * 100;\n    yPercentage = (mouseY - trackedPos.y) / 160 * 100;\n    (xPercentage > 100) ? xPercentage = 100: (xPercentage < 0) ? xPercentage = 0 : null;\n    (yPercentage > 100) ? yPercentage = 100: (yPercentage < 0) ? yPercentage = 0 : null;\n    picker = document.querySelector(\"#colorsquare-picker\");\n    yPercentage = yPercentage.toFixed(2);\n    xPercentage = xPercentage.toFixed(2);\n    picker.style.top = yPercentage + \"%\";\n    picker.style.left = xPercentage + \"%\";\n    s = xPercentage / 100;\n    v = 1 - yPercentage / 100;\n    colorChange();\n    break;\n   case \"hue-event\":\n    xPercentage = (mouseX - 10 - trackedPos.x) / 220 * 100;\n    (xPercentage > 100) ? xPercentage = 100: (xPercentage < 0) ? xPercentage = 0 : null;\n    xPercentage = xPercentage.toFixed(2);\n    picker = document.querySelector(\"#hue-picker\");\n    picker.style.left = xPercentage + \"%\";\n    h = xPercentage / 100;\n    hueChange();\n    break;\n   case \"alpha-event\":\n    xPercentage = (mouseX - 10 - trackedPos.x) / 220 * 100;\n    (xPercentage > 100) ? xPercentage = 100: (xPercentage < 0) ? xPercentage = 0 : null;\n    xPercentage = xPercentage.toFixed(2);\n    picker = document.querySelector(\"#alpha-picker\");\n    picker.style.left = xPercentage + \"%\";\n    a = xPercentage / 100;\n    colorChange();\n    break;\n  }\n\n }\n\n}\n\nfunction touchMove(event) {\n if (tracked) {\n  let mouseX = event.touches[0].clientX;\n  let mouseY = event.touches[0].clientY;\n  let trackedPos = tracked.getBoundingClientRect();\n  let xPercentage, yPercentage, picker;\n  switch (tracked.id) {\n   case \"colorsquare-event\":\n    xPercentage = (mouseX - trackedPos.x) / 240 * 100;\n    yPercentage = (mouseY - trackedPos.y) / 160 * 100;\n    (xPercentage > 100) ? xPercentage = 100: (xPercentage < 0) ? xPercentage = 0 : null;\n    (yPercentage > 100) ? yPercentage = 100: (yPercentage < 0) ? yPercentage = 0 : null;\n    picker = document.querySelector(\"#colorsquare-picker\");\n    yPercentage = yPercentage.toFixed(2);\n    xPercentage = xPercentage.toFixed(2);\n    picker.style.top = yPercentage + \"%\";\n    picker.style.left = xPercentage + \"%\";\n    s = xPercentage / 100;\n    v = 1 - yPercentage / 100;\n    colorChange();\n    break;\n   case \"hue-event\":\n    xPercentage = (mouseX - 10 - trackedPos.x) / 220 * 100;\n    (xPercentage > 100) ? xPercentage = 100: (xPercentage < 0) ? xPercentage = 0 : null;\n    xPercentage = xPercentage.toFixed(2);\n    picker = document.querySelector(\"#hue-picker\");\n    picker.style.left = xPercentage + \"%\";\n    h = xPercentage / 100;\n    hueChange();\n    break;\n   case \"alpha-event\":\n    xPercentage = (mouseX - 10 - trackedPos.x) / 220 * 100;\n    (xPercentage > 100) ? xPercentage = 100: (xPercentage < 0) ? xPercentage = 0 : null;\n    xPercentage = xPercentage.toFixed(2);\n    picker = document.querySelector(\"#alpha-picker\");\n    picker.style.left = xPercentage + \"%\";\n    a = xPercentage / 100;\n    colorChange();\n    break;\n  }\n\n }\n\n}\n\nfunction csDown(event) {\n tracked = event.currentTarget;\n let xPercentage = ((event.offsetX + 1) / 240) * 100;\n let yPercentage = ((event.offsetY + 1) / 160) * 100;\n yPercentage = yPercentage.toFixed(2);\n xPercentage = xPercentage.toFixed(2)\n let picker = document.querySelector(\"#colorsquare-picker\");\n picker.style.top = yPercentage + \"%\";\n picker.style.left = xPercentage + \"%\";\n s = xPercentage / 100;\n v = 1 - yPercentage / 100;\n colorChange();\n}\n\nfunction csDownTouch(event) {\n tracked = event.currentTarget;\n let rect = event.target.getBoundingClientRect();\n let offsetX = event.targetTouches[0].clientX - rect.left;\n let offsetY = event.targetTouches[0].clientY - rect.top;\n let xPercentage = ((offsetX + 1) / 240) * 100;\n let yPercentage = ((offsetY + 1) / 160) * 100;\n yPercentage = yPercentage.toFixed(2);\n xPercentage = xPercentage.toFixed(2)\n let picker = document.querySelector(\"#colorsquare-picker\");\n picker.style.top = yPercentage + \"%\";\n picker.style.left = xPercentage + \"%\";\n s = xPercentage / 100;\n v = 1 - yPercentage / 100;\n colorChange();\n}\n\nfunction mouseUp(event) {\n tracked = null;\n}\n\nfunction hueDown(event) {\n tracked = event.currentTarget;\n let xPercentage = ((event.offsetX - 9) / 220) * 100;\n xPercentage = xPercentage.toFixed(2);\n let picker = document.querySelector(\"#hue-picker\");\n picker.style.left = xPercentage + \"%\";\n h = xPercentage / 100;\n hueChange();\n}\n\nfunction hueDownTouch(event) {\n tracked = event.currentTarget;\n let rect = event.target.getBoundingClientRect();\n let offsetX = event.targetTouches[0].clientX - rect.left;\n let xPercentage = ((offsetX - 9) / 220) * 100;\n xPercentage = xPercentage.toFixed(2);\n let picker = document.querySelector(\"#hue-picker\");\n picker.style.left = xPercentage + \"%\";\n h = xPercentage / 100;\n hueChange();\n}\n\nfunction hueChange() {\n let rgb = hsvToRgb(h, 1, 1)\n let colorsquare = document.querySelector(\".colorsquare\")\n colorsquare.style.background = `rgba(${rgb[0]},${rgb[1]},${rgb[2]},1)`;\n colorChange();\n}\n\nfunction colorChange() {\n let rgb = hsvToRgb(h, s, v);\n r = rgb[0];\n g = rgb[1];\n b = rgb[2];\n hexValue = RGBAToHex();\n let pickedColor = document.querySelector(\".color-picked\");\n pickedColor.style.background = `rgba(${rgb[0]},${rgb[1]},${rgb[2]},${a})`;\n colorChangeCallback();\n}\n\nfunction alphaDown(event) {\n tracked = event.currentTarget;\n let xPercentage = ((event.offsetX - 9) / 220) * 100;\n xPercentage = xPercentage.toFixed(2);\n let picker = document.querySelector(\"#alpha-picker\");\n picker.style.left = xPercentage + \"%\";\n a = xPercentage / 100;\n colorChange();\n}\n\nfunction alphaDownTouch(event) {\n tracked = event.currentTarget;\n let rect = event.target.getBoundingClientRect();\n let offsetX = event.targetTouches[0].clientX - rect.left;\n let xPercentage = ((offsetX - 9) / 220) * 100;\n xPercentage = xPercentage.toFixed(2);\n let picker = document.querySelector(\"#alpha-picker\");\n picker.style.left = xPercentage + \"%\";\n a = xPercentage / 100;\n colorChange();\n}\n\n//Math algorithms\nfunction hsvToRgb(h, s, v) {\n var r, g, b;\n\n var i = Math.floor(h * 6);\n var f = h * 6 - i;\n var p = v * (1 - s);\n var q = v * (1 - f * s);\n var t = v * (1 - (1 - f) * s);\n\n switch (i % 6) {\n  case 0:\n   r = v, g = t, b = p;\n   break;\n  case 1:\n   r = q, g = v, b = p;\n   break;\n  case 2:\n   r = p, g = v, b = t;\n   break;\n  case 3:\n   r = p, g = q, b = v;\n   break;\n  case 4:\n   r = t, g = p, b = v;\n   break;\n  case 5:\n   r = v, g = p, b = q;\n   break;\n }\n\n return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n}\n\nfunction RGBAToHex() {\n let rHex = r.toString(16);\n let gHex = g.toString(16);\n let bHex = b.toString(16);\n\n if (rHex.length == 1)\n  rHex = \"0\" + rHex;\n if (gHex.length == 1)\n  gHex = \"0\" + gHex;\n if (bHex.length == 1)\n  bHex = \"0\" + bHex;\n\n\n return (\"#\" + rHex + gHex + bHex).toUpperCase();\n}\n\nfunction rgbToHSV(r, g, b, update) {\n    let rperc, gperc, bperc,max,min,diff,pr,hnew,snew,vnew;\n    rperc = r / 255;\n    gperc = g / 255;\n    bperc = b / 255;\n    max = Math.max(rperc, gperc, bperc);\n    min = Math.min(rperc, gperc, bperc);\n    diff = max - min;\n\n    vnew = max;\n    (vnew == 0) ? snew = 0 : snew = diff / max ;\n\n    for (let i=0;i<3;i++) {\n      if ([rperc,gperc,bperc][i] === max) {\n        pr=i;\n        break;\n      }\n    }\n    if (diff==0) {\n      hnew = 0;\n      if (update) {\n        h=hnew;\n        s=snew;\n        v=vnew;\n        hueChange();\n        return;\n      }\n      else {\n        return {h:hnew,s:snew,v:vnew};\n      }\n    }\n    else {\n      switch (pr) {\n        case 0:\n          hnew=60*(((gperc-bperc)/diff)%6)/360\n          break;\n        case 1:\n          hnew=60*(((bperc-rperc)/diff)+2)/360\n          break;\n        case 2:\n          hnew=60*(((rperc-gperc)/diff)+4)/360\n          break;\n      }\n      if (hnew < 0) hnew+=6;\n    }\n\n    if (update) {\n      h=hnew;\n      s=snew;\n      v=vnew;\n      hueChange();\n    }\n    else {\n      return {h:hnew,s:snew,v:vnew};\n    }\n}\n</script>\n\n<style>\n.main-container {\n\twidth: 240px;\n\theight: 265px;\n\tbackground: #f2f2f2;\n\tborder-radius: 1px;\n\t-webkit-box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.51);\n\t-moz-box-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.51);\n\tbox-shadow: 0px 0px 4px 0px rgba(0, 0, 0, 0.51);\n  -webkit-touch-callout: none;\n    -webkit-user-select: none;\n     -khtml-user-select: none;\n       -moz-user-select: none;\n        -ms-user-select: none;\n            user-select: none;\n}\n\n.saturation-gradient {\n\tbackground: linear-gradient(to right, rgb(255, 255, 255), rgba(255, 255, 255, 0));\n\twidth: 240px;\n\theight: 160px;\n}\n\n.value-gradient {\n\tbackground: linear-gradient(to top, rgb(0, 0, 0), rgba(0, 0, 0, 0));\n\toverflow: hidden;\n\twidth: 240px;\n\theight: 160px;\n}\n\n.hue-selector {\n\tbackground: linear-gradient(to right, #ff0000 0%, #ffff00 17%, #00ff00 33%, #00ffff 50%, #0000ff 67%, #ff00ff 83%, #ff0000 100%);\n\tmargin: 15px 10px 10px 10px;\n\tborder-radius: 10px;\n\theight: 10px;\n}\n\n#hue-picker {\n\tbackground: #FFF;\n\twidth: 12px;\n\theight: 12px;\n\tborder-radius: 50%;\n\tleft: 0%;\n\tposition: relative;\n\tcursor: default;\n\ttransform: translate(-5px, -1px);\n\t-webkit-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n\t-moz-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n\tbox-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n}\n\n#hue-event {\n\twidth: 236px;\n\theight: 14px;\n\ttransform: translate(-8px, -14px);\n\tcursor: default;\n  touch-action: none;\n}\n\n.alpha-selector {\n\tbackground-image: linear-gradient(45deg, #808080 25%, transparent 25%), linear-gradient(-45deg, #808080 25%, transparent 25%), linear-gradient(45deg, transparent 75%, #808080 75%), linear-gradient(-45deg, transparent 75%, #808080 75%);\n\tbackground-size: 10px 10px;\n\tbackground-position: 0 0, 0 5px, 5px -5px, -5px 0px;\n\tmargin: 10px 10px;\n\tborder-radius: 10px;\n\theight: 10px;\n\tposition: relative;\n}\n\n#alpha-picker {\n\tbackground: #FFF;\n\twidth: 12px;\n\theight: 12px;\n\tborder-radius: 50%;\n\tleft: 100%;\n\tposition: relative;\n\tcursor: default;\n\ttransform: translate(-5px, -11px);\n\t-webkit-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n\t-moz-box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n\tbox-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.67);\n}\n\n#alpha-event {\n\twidth: 236px;\n\theight: 14px;\n\ttransform: translate(-8px, -24px);\n\tcursor: default;\n  touch-action: none;\n}\n\n.alpha-value {\n\tbackground: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1));\n\twidth: 100%;\n\theight: 100%;\n\tborder-radius: 10px;\n}\n\n.colorsquare {\n\tbackground: rgb(255, 0, 0);\n}\n\n#colorsquare-picker {\n\tmargin: 0;\n\tpadding: 0;\n\twidth: 12px;\n\theight: 12px;\n\tborder-radius: 50%;\n\tborder: 2px solid #FFFB;\n\tposition: relative;\n\ttransform: translate(-9px, -9px);\n\tleft: 100%;\n}\n\n#colorsquare-event {\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n\ttransform: translate(0, -16px);\n  touch-action: none;\n}\n\n.color-info-box {\n\tmargin: 10px;\n\twidth: 100%;\n\theight: 22px;\n\tvertical-align: middle;\n\tposition: relative;\n}\n\n.color-picked {\n\twidth: 18px;\n\theight: 18px;\n\tborder-radius: 2px;\n\tbackground: rgba(255, 0, 0, 1);\n\tdisplay: inline-block;\n}\n\n.color-picked-bg {\n\tbackground-image: linear-gradient(45deg, #808080 25%, transparent 25%), linear-gradient(-45deg, #808080 25%, transparent 25%), linear-gradient(45deg, transparent 75%, #808080 75%), linear-gradient(-45deg, transparent 75%, #808080 75%);\n\tbackground-size: 10px 10px;\n\tbackground-position: 0 0, 0 5px, 5px -5px, -5px 0px;\n\tborder: 2px solid #FFF;\n\tborder-radius: 4px;\n\twidth: 18px;\n\theight: 18px;\n\tcolor: #fff;\n\tdisplay: inline-block;\n}\n\n.hex-text-block {\n\tdisplay: inline-block;\n\tbackground: white;\n\tborder-radius: 2px;\n\tpadding: 2px;\n\tborder: 1px solid #e3e3e3;\n\theight: 16px;\n\twidth: 54px;\n\tvertical-align: top;\n\ttext-align: center;\n}\n\n.rgb-text-block {\n\tdisplay: inline-block;\n\tbackground: white;\n\tborder-radius: 2px;\n\tpadding: 2px;\n\tmargin: 0 1px;\n\tborder: 1px solid #dcdcdc;\n\theight: 16px;\n\twidth: 23px;\n\tvertical-align: top;\n\ttext-align: center;\n}\n\n.rgb-text-div {\n\tright: 10%;\n\tdisplay: inline-block;\n\tvertical-align: top;\n\tposition: absolute;\n}\n\n.text-label {\n\tposition: relative;\n\ttop: -12px;\n\tfont-family: sans-serif;\n\tfont-size: small;\n  color:#888;\n}\n\n.text {\n\tdisplay: inline;\n\tfont-family: sans-serif;\n\tmargin: 0;\n\tdisplay: inline-block;\n\tfont-size: 12px;\n\tfont-size-adjust: 0.50;\n\tposition: relative;\n\ttop: -1px;\n  vertical-align: middle;\n  -webkit-touch-callout: all;\n    -webkit-user-select: all;\n     -khtml-user-select: all;\n       -moz-user-select: all;\n        -ms-user-select: all;\n            user-select: all;\n}\n</style>\n\n<div class=\"main-container\">\n\n  <div class=\"colorsquare size\">\n      <div class=\"saturation-gradient\">\n          <div class=\"value-gradient\">\n              <div id=\"colorsquare-picker\"></div>\n              <div id=\"colorsquare-event\" on:mousedown={csDown} on:touchstart={csDownTouch}></div>\n          </div>\n      </div>\n  </div>\n\n  <div class=\"hue-selector\">\n      <div id=\"hue-picker\"></div>\n      <div id=\"hue-event\" on:mousedown={hueDown} on:touchstart={hueDownTouch}></div>\n  </div>\n\n  <div class=\"alpha-selector\">\n      <div class=\"alpha-value\"></div>\n      <div id=\"alpha-picker\"></div>\n      <div id=\"alpha-event\" on:mousedown={alphaDown} on:touchstart={alphaDownTouch}></div>\n  </div>\n\n  <div class=\"color-info-box\">\n    <div class=\"color-picked-bg\">\n      <div class=\"color-picked\"></div>\n    </div>\n\n    <div class=\"hex-text-block\">\n      <p class=\"text\">{hexValue}</p>\n    </div>\n\n    <div class=\"rgb-text-div\">\n      <div class=\"rgb-text-block\">\n        <p class=\"text\">{r}</p>\n        <p class=\"text-label\">R</p>\n      </div>\n\n      <div class=\"rgb-text-block\">\n        <p class=\"text\">{g}</p>\n        <p class=\"text-label\">G</p>\n      </div>\n\n      <div class=\"rgb-text-block\">\n        <p class=\"text\">{b}</p>\n        <p class=\"text-label\">B</p>\n      </div>\n    </div>\n  </div>\n\n</div>\n",
    "<script>\n\n\timport ToothChart from './components/ToothChart.svelte';\n\timport SideMenu from './components/SideMenu.svelte';\n\timport Xrays from './components/Xrays.svelte';\n  \timport Summary from './components/Summary.svelte';\n\n\timport {selectedTreatment, \n\t\t\tselectedTooth,\n\t\t\ttoothStates,\n\t\t\ttreatmentHistories,\n\t\t\ttreatments,\n\t\t\tdateInterval,\n\t\t\tdateIntervals,\n\t\t\tpoints,\n\t\t\tpaintHistory} from './components/stores/store.js';\n\n\timport {checkin, patient} from './components/stores/store.js';\n\t\n\timport {getToothCodes, \n\t\t\tfetchTreatments,\n\t\t\tfetchUserTreatments,\n\t\t\tfetchPaintings} from './api/doctor-treatment-api.js';\n\n\timport Tab, {Icon, Label} from '@smui/tab';\n  \timport TabBar from '@smui/tab-bar';\n\n  \timport {fade} from 'svelte/transition';\n\n  \timport moment from 'moment';\n\n\n\t$checkin = JSON.parse(document.getElementById('checkin').value);\n\t$patient = $checkin.user;\n\n\t  let iconTabs = [\n\t\t    {\n\t\t      icon: '',\n\t\t      label: 'Chart'\n\t\t    },\n\t\t    {\n\t\t      icon: '',\n\t\t      label: 'x-rays'\n\t\t    },\t\n\t\t    {\n\t\t      icon: '',\n\t\t      label: 'Тэмдэглэл'\n\t\t    },\n\t];\n\n\tlet toothCodes = getToothCodes();\n    // initial states\n    for (let i=0; i<toothCodes.length; i++){\n        let state = {\n            code: toothCodes[i],\n            active: true,\n            treatments: [],\n            value: 0,\n            decayLevel: 0,\n            toothTypeId: 0\n        }\n        $toothStates[toothCodes[i]] = state;\n    }\n\n\tlet activeTab = iconTabs[0];\n\n\tfetchTreatments().then(response => {\n\n\t\t\t$treatments = response.data;\n\t});\n\n\tfetchPaintings({user_id: $patient.id}).then(response => {\n\t\tlet history = response.data;\n\t\tfor (let i=0; i<history.length; i++){\n\t\t\tlet h = history[i];\n\t\t\tlet p1 = JSON.parse(h.content);\n\t\t\t// console.log('parsed once');\n\t\t\t// console.log(p1);\n\t\t\tlet p2 = JSON.parse(p1);\n\t\t\t// console.log('parsed twice');\n\t\t\t// console.log(p2);\n\t\t\th.content = p2;\n\t\t}\n\t\t$paintHistory = history;\n\n\t}).catch(err=>{\n\t\tconsole.log(err);\n\t\t$points = [];\n\t})\n\n\tfetchUserTreatments($patient.id)\n\t\t.then(response => {\n\t\t\tlet userTreatments = response.data;\n\t\t\t// console.log('fetched usertreatments');\n\t\t\t// console.log(userTreatments);\n\t\t\tuserTreatments = userTreatments.map(u => {\n\t\t\t\tu.created_at = new moment(u.created_at).format('YYYY-MM-DD HH:mm:ss');\n\t\t\t\treturn u;\n\t\t\t});\n\n\t\t\t$treatmentHistories = $treatmentHistories.concat(userTreatments);\n\t\t\t// update toothstates\n\t\t\tfor (let i=0; i<userTreatments.length; i++){\n\t\t\t\t\n\t\t\t\t$dateIntervals.unshift(userTreatments[i].created_at);\n\t\t\t\t// escape treatmet for all tooths\n\t\t\t\tif (userTreatments[i].tooth_id == 0){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet code = userTreatments[i].tooth_id;\n\t\t\t\tlet treatments = [...$toothStates[code].treatments, userTreatments[i]];\n\t\t\t\t$toothStates[code].value = userTreatments[i].value;\n\t\t\t\t$toothStates[code].treatments = treatments;\n\t\t\t}\n\t\t\t$dateIntervals = $dateIntervals;\n\t\t\tconsole.log('date intervals:');\n\t\t\tconsole.log($dateIntervals);\n\n\t\t\t$toothStates = $toothStates;\n\t\t})\n\t\t.catch(err => {\n\t\t\talert('Хадгалсан эмчилгээг татахад алдаа гарлаа');\n\t\t\tconsole.log(err);\n\t\t})\n\t// window.onbeforeunload = function(event)\n //    {\n //        return confirm(\"Confirm refresh\");\n //    };\n</script>\n\n<div class=\"card mb-1\">\n\t<div class=\"card-body\">\n\t\t<TabBar bind:active={activeTab} tabs={iconTabs} let:tab>\n\t\t  <Tab {tab}>\n\t\t    <Icon class=\"material-icons\">{tab.icon}</Icon>\n\t\t    <Label>{tab.label}</Label>\n\t\t  </Tab>\n\t\t</TabBar>\n\t</div>\n</div>\n\n\t<div class=\"row\" transition:fade\n\t     class:hidden={activeTab != iconTabs[0]}>\n\t    <ToothChart />\n\t    <SideMenu />\n\t</div>\n\n\t<div class=\"row\" transition:fade\n\t\tclass:hidden={activeTab != iconTabs[1]}>\n\t\t<Xrays />\n\t</div>\n\n\t{#if activeTab == iconTabs[2]}\n\t\t<div class=\"row\" transition:fade>\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<div class=\"card\">\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<Summary />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t{/if}\n<style>\n\n   .hidden{\n   \tdisplay: none;\n   }\n</style>",
    "\n{#if show}\n<div id=\"decayModal\"\n    bind:this={lm} class=\"modal text-center\" tabindex=\"-1\" role=\"dialog\"\n    class:show\n    on:click|self={close} style=\"display: block; background: rgba(0, 0, 0, 0.4);\"\n    transition:fade>\n    <div class=\"modal-dialog\" role=\"document\" transition:fly={{y:-100, duration: 300}}>\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n        <br>\n        <br>\n        <h3><b>\n                <div>Шүд #{$selectedTooth}</div>\n            </b></h3>\n        <svg height=\"200\" width=\"200\">\n            <polygon id=\"pol-0\" \n                class:lombo={flags[4] !== '0'}\n                on:click={()=>handleClickDecay(0)} points=\"0,0 100,100 200,0\" />\n            <polygon id=\"pol-1\" \n                class:lombo={flags[3] !== '0'}\n                on:click={()=>handleClickDecay(1)} points=\"100,100 200,0 200,200\" />\n            <polygon id=\"pol-2\" \n                class:lombo={flags[2] !== '0'}\n                on:click={()=>handleClickDecay(2)} points=\"0,200 100,100 200,200\" />\n            <polygon id=\"pol-3\" \n                class:lombo={flags[1] !== '0'}\n                on:click={()=>handleClickDecay(3)} points=\"0,0 100,100 0,200\" />\n            <circle id=\"pol-4\" \n                class:lombo={flags[0] !== '0'}\n                on:click={()=>handleClickDecay(4)} cx=\"100\" cy=\"100\" r=\"50\" />\n        </svg>\n        <div>\n            <br>\n            <h5 style=\"color: darkgrey\"><b>Цоорлын зэрэг</b></h5>\n            <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                <input type=\"hidden\" id=\"radioDecayLevel\" value=\"1\">\n                <label class=\"btn btn-info active\" on:click={()=>decayLevel=1}>\n                    <input type=\"radio\" name=\"decayLevel\" id=\"option1\" checked> 1\n                </label>\n                <label class=\"btn btn-info\" on:click={()=>decayLevel=2}>\n                    <input type=\"radio\" name=\"decayLevel\" id=\"option2\"> 2\n                </label>\n                <label class=\"btn btn-info\" on:click={()=>decayLevel=3}>\n                    <input type=\"radio\" name=\"decayLevel\" id=\"option3\"> 3\n                </label>\n                <label class=\"btn btn-info\" on:click={()=>decayLevel=4}>\n                    <input type=\"radio\" name=\"decayLevel\" id=\"option4\"> 4\n                </label>\n            </div>\n        </div>\n        <br>\n        <h5 style=\"color: darkgrey\"><b>Сүүн шүд</b></h5>\n        <label class=\"switch\">\n            <!-- <input type=\"checkbox\" on:change={()=>isMilky=(isMilky+1)%2}> -->\n            <Switch on:change={()=>isMilky=(isMilky+1)%2} />\n        </label>\n        <br>\n        <br>\n    <button class=\"btn btn-info btn-ls\" on:click={handleSubmit}>ОРУУЛАХ</button>\n</div>\n</div>\n</div>\n</div>\n{/if}\n\n<script>\n\n    import Switch from '@smui/switch';\n    import Dialog, {Title, Content, Actions} from '@smui/dialog';\n    import Button, {Label} from '@smui/button';\n    import {fly,fade} from 'svelte/transition';\n\n    import {selectedTooth, toothStates} from './stores/store.js';\n\n    import {createEventDispatcher} from 'svelte';\n    export let show = false;\n    export let value = 0;\n\n    const dispatch = createEventDispatcher();\n\n    let dialog;\n    let decayLevel = 1;\n    let isMilky = 0;\n\n    let lm;\n    $:console.log('decay modal ', show);\n    $:console.log('is milky', isMilky);\n    $:console.log('decay level', decayLevel);\n\n    const close = (event) => {\n        value = 0;\n        show = false;\n    }\n\n    const toBinList = (base10) => {\n        let b = base10.toString(2);\n        while (b.length < 5){\n            b = '0' + b ;\n        }\n        return b.split('');\n    }\n    let flags = new Array(5).fill('0');\n    $: flags = toBinList(value);\n    // $:{\n    //     if ($selectedTooth && $toothStates.length > 0){\n    //         value = $toothStates[$selectedTooth].value;\n    //         flags = toBinList($toothStates[$selectedTooth].value);\n    //         console.log('decaychart react');\n    //         console.log(flags);\n    //     }\n    // }\n\n    const handleClickDecay = (p) => {\n        console.log('fill ', p);\n        let val = Math.pow(2, p);\n        let pol = document.getElementById(`pol-${p}`);\n        if (pol.classList.contains('lombo')){\n            value -= val;\n        }else{\n            value += val;\n        }\n       $toothStates[$selectedTooth].value = value;\n       console.log(value);\n       $toothStates = $toothStates;\n    }\n\n    const handleSubmit  = () => {\n        if (value == 0){\n            alert('Ломбоо сонгоно уу');\n            return;\n        }\n        let detail = {\n            toothCode: $selectedTooth,\n            decayLevel,\n            toothTypeId: isMilky\n        }\n        value = 0;\n       $toothStates[$selectedTooth].decayLevel = decayLevel;\n       $toothStates[$selectedTooth].toothTypeId = isMilky;\n        dispatch('submit', detail);\n    }\n\n</script>\n\n\n<style>\n\n    .lombo {\n        fill: #138496;\n        animation-duration: 0.3s;\n    }\n\n    polygon {\n        margin: auto;\n        display: block;\n        stroke-width: 1;\n        stroke: darkgrey;\n        fill: transparent;\n    }\n\n    circle {\n        stroke-width: 1;\n        stroke: darkgrey;\n        fill: white;\n    }\n\n</style>",
    "<svg height=\"25\" width=\"25\">\n    <polygon id=\"pl-0\" points=\"0,0 12.5,12.5 25,0\"\n        class:lombo={flags[4] !== '0'} />\n    <polygon id=\"pl-1\" points=\"12.5,12.5 25,0 25,25\"\n        class:lombo={flags[3] !== '0'} />\n    <polygon id=\"pl-2\" points=\"0,25 12.5,12.5 25,25\"\n        class:lombo={flags[2] !== '0'} />\n    <polygon id=\"pl-3\" points=\"0,0 12.5,12.5 0,25\"\n        class:lombo={flags[1] !== '0'} />\n    <circle id=\"pl-4\" cx=\"12.5\" cy=\"12.5\" r=\"6.25\"\n        class:lombo={flags[0] !== '0'} />\n</svg>\n\n\n\n<script>\n    import {toothStates} from './stores/store.js';\n\n\n    export let toothCode;\n\texport let value = 0;\n\n    const toBinList = (base10) => {\n        let b = base10.toString(2);\n        while (b.length < 5){\n            b = '0' + b ;\n        }\n        return b.split('');\n    }\n\n    let flags = [];\n    $:{\n        let ts = $toothStates;\n        flags = toBinList($toothStates[toothCode].value);\n    }\n\n</script>\n\n<style>\n\n.lombo {\n        fill: #138496;\n        animation-duration: 0.3s;\n    }\n    \npolygon {\n    margin: auto;\n    display: block;\n    stroke-width: 1;\n    stroke: darkgrey;\n    fill: transparent;\n}\n\ncircle {\n    stroke-width: 1;\n    stroke: darkgrey;\n    fill: white;\n}\n\n\n</style>",
    "<Dialog bind:this={dialog} aria-labelledby=\"simple-title\" aria-describedby=\"simple-content\"\n\tstyle=\"z-index: 1050;\">\n    <Title>{dialogTitle}</Title>\n    <Content>\n    \t<table class=\"table table-bordered table-responsive\">\n                    <thead class=\"thead-light\">\n                        <tr>\n                            <td>#</td>\n                            <td>Шүд</td>\n                            <td>Эмчилгээ</td>\n                            <td>Үнэ</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    \t{#each $treatmentHistories as th, i (th.id)}\n\n                    \t{#if !$treatmentHistories[i].price}\n                            <tr transition:fade>\n                            \t<td>{i+1}</td>\n                            \t<td>{th.tooth_id == 0? 'Бүх шүд': th.tooth_id}</td>\n                            \t<td>{th.treatment.name}</td>\n                            \t<td>\n                                    {#if th.checkin_id > 0}\n                                \t\t<div class=\"input-group\">\n    \t                            \t\t<input class=\"form-control\"\n                                                placeholder=\"{th.treatment.price.toLocaleString()}-{th.treatment.limit.toLocaleString()}₮\" \n    \t                            \t\t\tclass:invalid={th.inputPrice > 0 && (th.inputPrice < th.treatment.price) || (th.inputPrice>th.treatment.limit)}\n    \t                            \t\t\ton:change={()=>handleValidatePrice(th, th.inputPrice)}\n    \t                            \t\t\tbind:value={th.inputPrice}\n    \t                            \t\t\trequired=\"{true}\"\n                                                type=\"number\">\n    \t                            \t</div>\n                                    {:else}\n                                        <div>\n                                            Өөр эмнэлэгт хийлгэсэн эмчилгээ\n                                        </div>\n                                    {/if}\n                            \t</td>\n                            </tr>\n                        {/if}\n                        {/each}\n                        <tr>\n                        \t<td>Нийт</td>\n                        \t<td colspan={5}>{total}₮</td>\n                        </tr>\n                    </tbody>\n                </table>\n    </Content>\n    <Actions>\n        <Button><Label>болих</Label></Button>\n        <button class=\"btn btn-primary ml-3\" on:click={handleFinish}><Label>Болсон</Label></button>\n    </Actions>\n</Dialog>\n<Snackbar bind:this={resultSnackbar}>\n  <Label>Амжилттай хадгалагдлаа - {lastTotal.toLocaleString()}₮</Label>\n  <!-- <Actions>\n    <IconButton title=\"Dismiss\">close</IconButton>\n  </Actions> -->\n</Snackbar>\n\n<script>\n    import Dialog, {Title, Content, Actions} from '@smui/dialog';\n    import Snackbar from '@smui/snackbar';\n    import IconButton from '@smui/icon-button';\n    import TreatmentHistoryList from './TreatmentHistoryList.svelte';\n    import Button, {Label} from '@smui/button';\n    import {treatmentHistories, \n            checkin,\n            patient,\n            points,\n            paintState} from './stores/store.js';\n\n    import {addUserTreatment, \n            updateUserTreatment,\n            finishTreatment,\n            addPainting} from '../api/doctor-treatment-api.js';\n    import axios from 'axios';\n\n    import {fade} from 'svelte/transition';\n\n    import moment from 'moment';\n\n    export let dialog;\n    let dialogTitle = 'Үнэн дүнгүүдийг оруулна уу';\n\n\n    let resultSnackbar;\n    let total = 0;\n    let lastTotal = 0;\n\n    $:{\n    \ttotal = 0;\n    \tfor (let i=0; i<$treatmentHistories.length; i++){\n    \t\tif (!$treatmentHistories[i].price){\n                if (!isNaN($treatmentHistories[i].inputPrice))\n                    total += parseInt($treatmentHistories[i].inputPrice);\n            }\n    \t }\n    \ttotal = total.toLocaleString();\n    }\n\n    const handleValidatePrice = (treatmentHistory, val) => {\n        console.log('onchange');\n        console.log(val);\n    \t// let treatment = treatmentHistory.treatment;\n    \t// if (val >= treatment.price && (val<=treatment.limit)){\n    \t// \ttreatmentHistory.price = val;\n    \t// }\n    }\n\n    const quit = () => {\n        window.location = '/doctor';\n    }\n\n    const handleSavePainting = () => {\n        return new Promise((resolve, reject) => {\n\n            // any left painting?\n            if ($points.length == 0){\n                resolve(true);\n            }\n            let data = {\n                user_id: $patient.id,\n                content: JSON.stringify($points)\n            }\n            addPainting(data)\n                .then(response => {\n                    resolve(true);\n                })\n                .catch(err => {\n                    reject(err);\n                });\n        });\n    }\n\n    const handleFinish = () => {\n    \tif (document.getElementsByClassName('invalid').length > 0){\n    \t\talert('Үнэн дүн буруу байна');\n    \t\treturn true;\n    \t}\n        lastTotal = total;\n\n        // define async function then call immediately\n        const finish = async () => {\n            try{\n                await handleSavePainting();\n            }catch(err){\n                if (confirm('Зураг хадгалахад алдаа гарлаа дахиж оролдох уу?')){\n                    await handleSavePainting(); // why not xd\n                }\n            }\n            try{\n                let responses = await storeTreatments();\n                console.log('storeTreatments responses');\n                console.log(responses);\n                $treatmentHistories = $treatmentHistories;\n                resultSnackbar.open();\n                dialog.close();\n                let checkinRequest = {\n                    checkin_id: $checkin.id\n                }\n                let finishResult = await finishTreatment(checkinRequest);\n                if (finishResult.data == 0){\n                    alert('Эмчилгээг дуусгахад алдаа гарлаа\\nДахиж  оролдоно уу');\n                    console.log(err);\n                    return;\n                }\n                setTimeout(quit, 2000);\n            }catch(err){\n                alert('Эмчилгээнүүдийг хадгалахад алдаа гарлаа\\nPage reload хийнэ үү');\n                console.log(err);\n            }\n        }\n        finish();\n    }\n\n    const storeTreatments = () => {\n        // assumes prices are valid\n\n\t\tlet promises = [];\n        lastTotal = 0;\n\t\tfor (let i=0; i<$treatmentHistories.length; i++){\n\n            let userTreatment = $treatmentHistories[i];\n            // already recorded?\n            // on other hospital?\n\t\t\tif ((userTreatment.price > 0) || \n                (userTreatment.checkin_id == 0)){\n\t\t\t\tcontinue;\n\t\t\t}\n            // new record\n            lastTotal += parseInt(userTreatment.inputPrice);\n            userTreatment.price = userTreatment.inputPrice;\n            console.log('update ut');\n            console.log(userTreatment);\n\t\t\tlet promise = updateUserTreatment(userTreatment);\n\t\t\tpromises.push(promise);\n\t\t}\n\t\treturn axios.all(promises);\n    }\n\n    const handleError = (userTreatment) => {\n        alert('Үнэн дүн хадгалахад алдаа гарлаа');\n        userTreatment.price = null;\n    }\n    \n</script>\n\n<style>\n\n\t.invalid{\n\t\tborder: 1px solid red;\n\t}\n</style>",
    "\n<script>\n\n\timport p5 from 'p5';\n\t// import {HsvPicker} from 'svelte-color-picker';\n\n\timport {paintState,\n\t\t\tpaintHistory,\n\t\t\tpoints} from './stores/store.js';\n\timport { onMount } from 'svelte';\n\n\tlet container;\n\tlet rect;\n\n\tlet drawedAllPoints = false;\n\t\n\t// draw poing from description\n\tconst drawPoint = (s, point) => {\n\n\t\tlet blendMode;\n\t\tif (point.blend_mode === s.REMOVE){\n\t\t\tblendMode = s.REMOVE;\n\t\t\ts.stroke(s.color(0, 0, 0));\n\t\t}else{\n\t\t\tblendMode = s.BLEND;\n\t\t\ts.stroke(point.color);\n\t\t}\n\t\ts.blendMode(blendMode);\n\t\ts.strokeWeight(point.weight*$paintState.canvasWidth*$paintState.canvasHeight);\n\t\ts.point($paintState.canvasWidth*point.x, $paintState.canvasHeight*point.y);\n\t}\n\n\t// draw brand new point\n\tconst drawNewPoint = (s, x, y) => {\n\n\t\tlet blendMode;\n\t\tif ($paintState.color === 'eraser'){\n\t\t\tblendMode = s.REMOVE;\n\t\t\ts.stroke('#fff');\n\t\t}else{\n\t\t\tblendMode = s.BLEND;\n\t\t\ts.stroke($paintState.color);\n\t\t}\n\t\ts.blendMode(blendMode);\n\t\t\n\t\ts.strokeWeight($paintState.weight);\n\n\t\t$points.push({\n\t\t\tx: x/$paintState.canvasWidth,\n\t\t\ty: y/$paintState.canvasHeight,\n\t\t\tweight: $paintState.weight/($paintState.canvasWidth*$paintState.canvasHeight),\n\t\t\tblend_mode: blendMode,\n\t\t\tcolor: $paintState.color\n\t\t});\n\t\ts.point(x, y);\n\t}\n\n\tconst shouldDraw = (s) => {\n\t\tif (!$paintState.drawing)\n\t\t\treturn false;\n\t\tif ((s.mouseX < 0) || (s.mouseX > rect.width))\n\t\t\treturn false;\n\t\tif ((s.mouseY < 0) || (s.mouseY > rect.height))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\tconst sketch = (s) => {\n\n\t\tlet colorPicker;\n\t\ts.setup = () => {\n\t\t\t rect = container.getBoundingClientRect();\n\t\t\t $paintState.canvasWidth = rect.width;\n\t\t\t $paintState.canvasHeight = rect.height;\n\t\t\tlet canvas = s.createCanvas(rect.width, rect.height);\n\t\t\tcanvas.parent(container);\n\t\t\ts.fill(0,0,0,0); \n\t\t}\n\n\t\ts.mouseDragged = () => {\n\t\t\tif(shouldDraw(s))\n\t\t\t\tdrawNewPoint(s, s.mouseX, s.mouseY);\n\t\t}\n\n\t\ts.mouseClicked = () => {\n\t\t\tif (shouldDraw(s))\n\t\t\t\tdrawNewPoint(s, s.mouseX, s.mouseY)\n\t\t}\n// \n// \t\t\ts.draw = () => {\n// \t\t\t\tif (!$paintState.drawing){\n// \t\t\t\t\treturn false;\n// \t\t\t\t}\n// \t\t\t}\n\n\t\t\ts.touchStarted = () => {\n\t\t\t\tif(shouldDraw(s))\n\t\t\t\t\tdrawNewPoint(s, s.mouseX, s.mouseY);\n\t\t\t}\n\t}\n\n\t// create p5 instances that draw each snapshots\n\t\n\tlet sketchInstance;\n\t$:{\n\t\tlet c = container;\n\t\tif (c != null)\n\t\t\tsketchInstance = new p5(sketch);\n\t}\n\n\t$:{\n\t\tlet ph = $paintHistory;\n\t\tconsole.log('ph changed', ph.length);\n\t\tconsole.log(ph);\n\t\tlet c = container;\n\t\tif (ph.length > 0 && (c != null)){\n\t\t\tconsole.log('sketch instance');\n\t\t\tconsole.log(sketchInstance);\n\t\t\tfor (let i=0; i<$paintHistory.length; i++){\n\t\t\t\tlet h = $paintHistory[i];\n// \t\t\t\tconst snapShot = (s) => {\n// \n// \t\t\t\t\ts.setup = () => {\n// \t\t\t\t\t\trect = container.getBoundingClientRect();\n// \n// \t\t\t\t\t\tlet canvas = s.createCanvas(rect.width, rect.height);\n// \t\t\t\t\t\tcanvas.parent(container);\n// \t\t\t\t\t}\n// \n// \t\t\t\t\ts.draw = () => {\n// \t\t\t\t\t\tlet points = h.content;\n// \t\t\t\t\t\tfor (let i=0; i<points.length; i++){\n// \t\t\t\t\t\t\tdrawPoint(s, points[i]);\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t\t}\n// \t\t\t\tnew p5(snapShot);\n\t\t\t\tlet points = h.content;\n\t\t\t\tfor (let i=0; i<points.length; i++){\n\t\t\t\t\tdrawPoint(sketchInstance, points[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n    \n</script>\n\n\n<div bind:this={container} class=\"paint-container\"\n\tclass:front={$paintState.drawing}\n\tclass:penone={!$paintState.drawing}>\n</div>\n\n<style>\n\n\t.paint-container{\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n\n\t.penone{\n\t\tpointer-events: none;\n\t}\n\t/*.behind{\n\t\tz-index: -1;\n\t}\n\t*/\n\n\t.front{\n\t\tz-index: 1029;\n\t}\n\n</style>",
    "\n\n\n\n<div class=\"card\">\n    <div class=\"card-body\">\n        <div class=\"icon-wrapper\">\n            <div class=\"glyph\" on:click={() => handleClick('pencil')}\n            \tclass:active={$paintState.tool === 'pencil'}\n            \tclass:inactive={$paintState.tool !== 'pencil'}>\n                <div class=\"glyph-icon simple-icon-pencil\"></div>\n            </div>\n        </div>\n\n        <div class=\"icon-wrapper\">\n\t        <div class=\"glyph\" on:click={() => handleClick('eraser')}\n\t        \tclass:active={$paintState.tool === 'eraser'}\n            \tclass:inactive={$paintState.tool !== 'eraser'}>\n\t            <div class=\"glyph-icon iconsmind-Eraser\"></div>\n\t        </div>\n\t    </div>\n\t    <Slider displayMarkers\n\t    \tbind:value={weight}\n\t    \ton:change={() => console.log('paint weight slider onchange')}\n\t    \tmin={minWeight} max={maxWeight}/>\n\t    \t\n\t    <div class=\"row\">\n\t\t\t    <div bind:this={colorIndicator} style=\"width: 30px; height: 30px;\"\n\t\t\t    \ton:click|preventDefault={() => showColorPicker=true}></div>\n\t\t\t    <div class=\"mr-2\"></div>\n\t\t\t    <button on:click|preventDefault={() => showColorPicker=true}>өнгө сонгох</button>\n\t\t</div>\n\t    {#if showColorPicker}\n\t\t    <div class=\"colorpicker\">\n\t\t    \t<div class=\"glyph\" style=\"display: flex; justify-content: flex-end; font-size: 1.5rem; \n\t\t    \t\t\t\t\t\tcursor: pointer; margin-bottom: 2px;\"\n\t\t\t\t\ton:click|preventDefault={() => showColorPicker=false}>\n\t\t\t        <div class=\"glyph-icon simple-icon-close\"></div>\n\t\t\t    </div>\n\t\t\t    <HsvPicker on:colorChange={handleChangeColor} \n\t\t\t    \tstartColor={'#007bff'}/>\n\t\t\t</div>\n\t\t {/if}\n    </div>\n</div>\n\n\n<script>\n\n\timport {paintState} from './stores/store.js';\n\timport {HsvPicker} from 'svelte-color-picker';\n\timport {createEventDispatcher} from 'svelte';\n\timport Slider from '@smui/slider';\n\timport p5 from 'p5';\n\n\timport {rgbToHex} from './lib.js';\n\n\tconst dispatch = createEventDispatcher();\n\n\tlet minWeight = 3;\n\tlet maxWeight = 100;\n\tlet weight = 10;\n\n\tlet colorIndicator;\n\tlet showColorPicker = false;\n\n\t$:{\n\t\t$paintState.weight = weight;\n\t\t$paintState = $paintState;\n\t}\n\n\t$:{\n\t\tlet currentColor = $paintState.color;\n\t\tlet hex = currentColor === 'eraser'? '#fff': currentColor;\n\t\tif (colorIndicator)\n\t\t\tcolorIndicator.style.backgroundColor = hex;\n\t}\n\tconst draw = () => {\n\t\tif ($paintState.color === 'eraser'){\n\t\t\t$paintState = $paintState\n\t\t}\n\t}\n\n\tconst handleChangeColor = (event) => {\n\t\tlet rgb = event.detail;\n\t\t$paintState.color = rgbToHex(rgb.r, rgb.g, rgb.b);\n\t\t$paintState = $paintState;\n\t}\n\n\tconst handleClick = (key) => {\n\n\t\t// stopped drawing stuffs?\n\t\tif ($paintState.tool === key){\n\t\t\t$paintState.tool = null;\n\t\t\t$paintState.drawing = false;\n\t\t\t$paintState = $paintState;\n\t\t\tdispatch('stop');\n\t\t\treturn;\n\t\t}\n\t\tdispatch('start');\n\t\t$paintState.drawing = true;\n\t\t$paintState = $paintState;\n\t\t$paintState.tool = key;\n\t\tswitch(key){\n\t\t\tcase 'pencil':\n\t\t\t\tdraw();\n\t\t\t\tbreak;\n\t\t\tcase 'eraser':\n\t\t\t\t$paintState.color = 'eraser';\n\t\t\t\t$paintState = $paintState;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n</script>\n\n<style>\n\n\t.icon-wrapper{\n        display: inline-block; \n        font-size: 2.3rem;\n        cursor: pointer;\n\t}\n\n\t.active{\n\t\topacity: 1;\n\t\tcolor: #2a7eeb;\n\t}\n\n\t.inactive{\n\t\topacity: 0.4;\n\t}\n\n\t.colorpicker{\n\t\tposition: fixed;\n\t\tbottom: 0;\n\t\tright: 0;\n\t\ttransform: translate(-50%, -50%);\n\t\tmargin: 10px;\n\t}\n</style>",
    "<script>\n\timport {createEventDispatcher} from 'svelte';\n\timport {selectedTooth, selectedTreatment, toothStates} from './stores/store.js';\n\timport {getTreatmentImgSrc} from '../api/doctor-treatment-api.js';\n\timport {selectedTooths,\n\t\t\tdateInterval} \n\t\tfrom './stores/store.js';\n\n\timport moment from 'moment';\n\n\texport let toothCode = 11;\n\tconst dispatch = createEventDispatcher();\n\n\tlet active = null;\n\tlet imgSrc = null;\n\tlet lastTreatment = null;\n\tlet treatments = null;\n\n\t$: {\n\t\tlet state = $toothStates[toothCode];\n\t\ttreatments = state.treatments;\n\n\t\tlastTreatment = null;\n\t\tlet v = 0;\n\t\tfor (let i=0; i<treatments.length; i++){\n\n\t\t\t// escape lombo for now\n\t\t\tif (treatments[i].treatment.id == 1)\n\t\t\t\tcontinue;\n\n\t\t\tif (treatments[i].created_at <= $dateInterval[1]){\n\t\t\t\tlastTreatment = treatments[i].treatment;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// $toothStates[toothCode].value = lastTreatment? lastTreatment.value: 0;\n\t\tlet lastTreatmentId = lastTreatment == null? null:lastTreatment.id;\n\t\timgSrc = getTreatmentImgSrc(toothCode, lastTreatmentId);\n\t}\n\t$: active = $toothStates[toothCode].active;\n\t\n\tconst handleClick = (event) => {\n\n\t\tlet detail = {\n\t\t\ttoothCode\n\t\t}\n\t\tdispatch('click', detail);\n\t}\n\n</script>\n\n\n<img on:click={handleClick} src={imgSrc}\n\tclass:active\n\tclass:disabled={!active}>\n\n\n<style>\n\t.active{\n\n\t}\n\n\t.disabled{\n\t\topacity: 0.5;\n\t}\n</style>",
    "\n{#each $treatmentHistories as th}\n\n\n{#if th.tooth_id == 0}\n<div class=\"col-md-12 text-left thcontainer\" on:click={showHistoryDetail(th)}\n\tstyle=\"cursor: pointer;\"\n\tclass:now={th.checkin_id>0}\n\tclass:existing={th.checkin_id == 0}>\n\n\t{#if th.created_at <= $dateInterval[1]}\n\t<div class=\"glyph\" style=\"display: flex; justify-content: flex-end;\">\n        <div class=\"glyph-icon iconsmind-Remove\" on:click|stopPropagation={()=>handleDelete(th)}></div>\n    </div>\n    <b>Бүх шүд - {th.treatment.name}</b>\n    <div class=\"row\">\n        <div class=\"text-muted col-md-6\">\t\n            \n        </div>\n        <div class=\"text-right text-muted col-md-6\">\n            {new moment(th.created_at).format('YYYY-MM-DD HH:mm:ss')}\n        </div>\n    </div>\n    {/if}\n</div>\n\n{:else if (($selectedTooths.length == 0) || $toothStates[th.tooth_id].active)}\n\t\n\t{#if th.created_at <= $dateInterval[1]}\n\t<div class=\"col-md-12 text-left thcontainer\" on:click={showHistoryDetail(th)}\n\tstyle=\"cursor: pointer;\"\n\tclass:now={th.checkin_id>0}\n\tclass:existing={th.checkin_id == 0}>\n\t<div class=\"glyph\" style=\"display: flex; justify-content: flex-end; font-size: 1rem;\"\n\t\ton:click|stopPropagation={()=>handleDelete(th)}>\n        <div class=\"glyph-icon simple-icon-close\"></div>\n    </div>\n\t    <b>{th.tooth_id == 0? 'Бүх шүд':`#${th.tooth_id}`} - {th.treatment.name}</b>\n\t    <div class=\"row\">\n\t        <div class=\"text-muted col-md-6\">\t\n\t            {#if th.treatment.id == 1}\n\t\t\t    \t<div>{th.tooth_type_id == 1? 'сүүн шүд':''}</div>\n\t\t\t    \t<div>цоорол - {th.decay_level}</div>\n\t\t\t    {/if}\n\t        </div>\n\t        <div class=\"text-right text-muted col-md-6\">\n\t            {new moment(th.created_at).format('YYYY-MM-DD HH:mm:ss')}\n\t        </div>\n\t    </div>\n\t</div>\n\t{/if}\n\n{/if}\n<div class=\"mb-1\"></div>\n{/each}\n\n<Dialog bind:this={historyDialog}\n\t\tstyle=\"z-index: 1050;\">\n\n\t<Title>\n\t\t{treatmentHistory.tooth_id == 0? 'Бүх шүд':`Шүд #${treatmentHistory.tooth_id}`}\n\t\t - {treatmentHistory.treatment.name}</Title>\n\t<Content>\n\t\t<TreatmentHistoryDetail \n\t\t\t{treatmentHistory}/>\n\t\t<br>\n\t\t{#if treatmentHistory.checkin_id > 0}\n\t\t\t<h4>Шинж тэмдэг</h4>\n\t\t\t<div class=\"input-group\">\n\t\t\t\t<!-- <div class=\"input-group-prepend\">\n\t\t\t\t\t<span class=\"input-group-text\">\n\t\t\t\t\t\tШинж тэмдэг\n\t\t\t\t\t</span>\n\t\t\t\t</div> -->\n\t\t\t\t<Textfield autofocus={false} textarea fullwidth bind:value={symptom} label=\"\" input$aria-controls=\"helper-text-textarea\" input$aria-describedby=\"helper-text-textarea\"/>\n\t\t\t</div>\n\t\t\t<div class=\"mb-3\"></div>\n\t\t\t<h4>Онош</h4>\n\t\t\t<div class=\"input-group\">\n\t\t\t\t\n\t\t\t\t<!-- <div class=\"input-group-prepend\">\n\t\t\t\t\t<span class=\"input-group-text\">\n\t\t\t\t\t\tОнош\n\t\t\t\t\t</span>\n\t\t\t\t</div> -->\n\t\t\t\t<Textfield autofocus={false} textarea fullwidth bind:value={diagnosis} label=\"\" input$aria-controls=\"helper-text-textarea\" input$aria-describedby=\"helper-text-textarea\" />\n\t\t\t</div>\n\t\t{/if}\n\t</Content>\n\n\t<Actions>\n\t\t{#if treatmentHistory.checkin_id > 0}\n\t\t\t<button class=\"btn btn-primary\" on:click={handleSave}>Хадгалах</button>\n\t\t{:else}\n\t\t\t<Button class=\"btn btn-primary\">Буцах</Button>\n\t\t{/if}\n\t</Actions>\n\n</Dialog>\n\n<Dialog bind:this={deleteDialog}\n\tstyle=\"z-index: 1050;\">\n\t<Title>Эмчилгээ устгах</Title>\n\n\t<Content>\n\t\t<div>\n\t\t\t{treatmentHistory.tooth_id == 0? 'Бүх шүд':`Шүд #${treatmentHistory.tooth_id}`}\n\t\t - {treatmentHistory.treatment.name}\n\t\t</div>\n\t\t<TreatmentHistoryDetail \n\t\t\t{treatmentHistory}/>\n\t</Content>\n\n\t<Actions>\n\t\t<Button primary><Label>Болих</Label></Button>\n\t\t<Button on:click={() => handleConfirmDelete(treatmentHistory)}><Label>Устгах</Label></Button>\n\t</Actions>\n</Dialog>\n\n<Snackbar bind:this={noteResultSnackbar}>\n\t<Label>{noteResult}</Label>\n</Snackbar>\n\n<script>\n\n\timport Dialog, {Title, Content, Actions} from '@smui/dialog';\n\timport Textfield from '@smui/textfield';\n\timport HelperText from '@smui/textfield/helper-text/index';\n\timport Button, {Label} from '@smui/button';\n\timport {toothStates, \n\t\t\ttreatmentHistories, \n\t\t\tselectedTooths,\n\t\t\tdateInterval,\n\t\t\tdateIntervals,\n\t\t\tcheckin} from './stores/store.js';\n\n\timport {deleteUserTreatment, \n\t\t\tgetTreatmentImgSrc,\n\t\t\taddUserTreatment,\n\t\t\tsaveNote} from '../api/doctor-treatment-api.js';\n\n\timport TreatmentHistoryDetail from './TreatmentHistoryDetail.svelte';\n\n\timport Snackbar from '@smui/snackbar';\n\n\timport moment from 'moment';\n\n\n\tconst handleDelete = (th) => {\n\t\ttreatmentHistory = th;\n\t\tdeleteDialog.open();\n\t}\n\n\tconst handleConfirmDelete = (th) => {\n\t\tdeleteUserTreatment(th.id)\n\t\t\t.then(response=>{\n\t\t\t\t// update ui\n\t\t\t\t$treatmentHistories = $treatmentHistories.filter(e=>e.id != th.id);\n\t\t\t\t$dateIntervals = $treatmentHistories.map(t => t.created_at).reverse();\n\t\t\t\t$toothStates[th.tooth_id].treatments = $toothStates[th.tooth_id].treatments.filter(t => t.created_at !== th.created_at);\n\n\t\t\t\tlet treatments = $toothStates[th.tooth_id].treatments;\n\t\t\t\tconsole.log($toothStates[th.tooth_id]);\n\t\t\t\tif (treatments.length == 0){\n\t\t\t\t\t$toothStates[th.tooth_id].value = 0;\n\t\t\t\t}else{\n\t\t\t\t\t$toothStates[th.tooth_id].value = treatments[treatments.length-1].value;\n\t\t\t\t}\n\t\t\t\t$toothStates = $toothStates;\n\t\t\t})\n\t\t\t.catch(err=>{\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\t}\n\n\tlet historyDialog;\n\tlet deleteDialog;\n\tlet treatmentHistory = {\n\t\ttooth_id: 1,\n\t\ttreatment: {name:''},\n\t\tsymptom: '',\n\t\tdiagnosis: ''\n\t}\n\n\tlet symptom = '';\n\tlet diagnosis = '';\n\n\tlet noteResultSnackbar;\n\tlet noteResult = '';\n\n\tconst showHistoryDetail = (th) => {\n\t\ttreatmentHistory = th;\n\t\tsymptom = th.symptom? th.symptom: '';\n\t\tdiagnosis = th.diagnosis? th.diagnosis: '';\n\t\thistoryDialog.open();\n\t}\n\n\tconst handleSave = () => {\n\t\ttreatmentHistory.symptom = symptom;\n\t\ttreatmentHistory.diagnosis = diagnosis;\n\n\t\tlet data = {\n\t\t\tid: treatmentHistory.id,\n\t\t\tcheckin_id: $checkin.id,\n\t\t\tsymptom,\n\t\t\tdiagnosis\n\t\t}\n\t\tconsole.log('saving', data);\n\t\tsaveNote(data)\n\t\t\t.then(response => {\n\t\t\t\tconsole.log('save note response');\n\t\t\t\tconsole.log(response.data);\n\t\t\t\tnoteResult = 'Амжилттай хадгалагдлаа';\n\t\t\t\tnoteResultSnackbar.open();\n\t\t\t\thistoryDialog.close();\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\talert('Тэмдэглэл хадгалахад алдаа гарлаа');\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\t}\n\n</script>\n\n\n<style>\n\n\t.topright{\n\t\tposition: absolute;\n\t\ttop: 3;\n\t\tright: 3;\n\t}\n\n\t.planned{\n        border-left: thick solid brown;\n    }\n\n    .existing{\n        border-left: thick solid orange;\n    }\n\n    .now{\n        border-left: thick solid #2a7eeb;\n    }\n</style>",
    "\n<div class=\"d-flex align-items-center\">\n    <div class=\"search mt-2\" data-search-path=\"Layouts.Search.html?q=\"\n        style=\"margin: 0 auto;\">\n        <input placeholder=\"хайх...\" bind:value={searchVal}>\n        <span class=\"search-icon\">\n            <i class=\"simple-icon-magnifier\"></i>\n        </span>\n    </div>\n</div>\n\n<div id=\"treatmentsContainer\" class=\"card-body\" on:click={onOpen}>\n    {#each $treatments as treatment}\n\n    {#if searchVal.length == 0 || isMatch(searchVal, treatment.name)}\n        <button \n        class=\"btn btn-primary btn-block\"\n        on:click={()=>handleClickTreatment(treatment)}\n        \tclass:active={$selectedTreatment && (treatment.id==$selectedTreatment.id)}>\n            <div class=\"row\">\n            \t<div class=\"col-md-12\">\n                    {treatment.name}\n                </div>\n            </div>\n        </button>\n    {/if}\n    {/each}\n</div>\n\n<Dialog\n  bind:this={allToothDialog}\n  aria-labelledby=\"dialog-title\"\n  aria-describedby=\"dialog-content\"\n  style=\"z-index: 1050;\"\n>\n  <Title id=\"dialog-title\">{clickedTreatment? clickedTreatment.name:''}</Title>\n  <Content id=\"dialog-content\">\n    Бүх шүдэнд хийгдэх эмчилгээ байна\n  </Content>\n  <Actions>\n    <Button>\n      <Label>болих</Label>\n    </Button>\n    <Button on:click={handleAddTreatment}>\n      <Label>Үргэлжлүүлэх</Label>\n    </Button>\n  </Actions>\n</Dialog>\n\n\n<script>\nimport List, {Item, Text} from '@smui/list';\nimport {selectedTreatment, treatments} from './stores/store.js';\nimport Dialog, {Title, Content, Actions} from '@smui/dialog';\nimport Button, {Label} from '@smui/button';\nimport {checkin, \n        treatmentHistories,\n        dateIntervals,\n        entryMode} from './stores/store.js';\n\nimport moment from 'moment';\n\n\nlet allToothDialog;\nlet clickedTreatment;\n\nconst handleClickTreatment = (treatment) => {\n    clickedTreatment = treatment;\n    console.log('previous treatment', $selectedTreatment);\n    if ($selectedTreatment == treatment){\n        $selectedTreatment = 0;\n        return;\n    }\n\n    // make sure fora all tooths\n    if (treatment.selection_type == 0){\n        console.log('open all treatment dialog');\n        allToothDialog.open();\n        return;\n    }\n    console.log('selected treatment', treatment);\n    $selectedTreatment = treatment;\n}   \n\nconst handleAddTreatment = () => {\n    let userTreatment = {\n            id: {},\n            checkin_id: $entryMode.id,\n            user_id: $checkin.user_id,\n            treatment_id: clickedTreatment.id,\n            treatment: clickedTreatment,\n            treatment_selection_id: 0,\n            treatment_selection: null,\n            tooth_id: 0,\n            price: null,\n            symptom: '',\n            diagnosis: '',\n\n            value: 0,\n            decay_level: 0,\n            tooth_type_id: 0,\n            created_at: new moment().format('YYYY-MM-DD HH:mm:ss')\n        }\n\n    $dateIntervals = [...$dateIntervals, userTreatment.created_at];\n    $treatmentHistories = [userTreatment, ...$treatmentHistories];\n}\n\nlet searchVal = '';\n\nconst isMatch = (keyword, value) => {\n    let regex = new RegExp(keyword, 'i');\n    return regex.exec(value);\n}\nconst onOpen = () => {\n\n}\n</script>\n\n\n<style>\n\t.active{\n\t\tbackground-color: #efefef;\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "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"
}